apiVersion: v1
kind: Namespace
metadata:
  name: pacman
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: pacman
  name: pacman
  namespace: pacman
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pacman
  template:
    metadata:
      labels:
        name: pacman
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - image: mbentley/pacman-nodejs
          name: pacman
          env:
          - name: MONGO_SERVICE_HOST
            value: mongo.gns.mbentley
          - name: MONGODB_HOST
            value: mongo.gns.mbentley
          ports:
            - containerPort: 8080
              name: http-server
---
apiVersion: v1
kind: Service
metadata:
  name: pacman
  labels:
    name: pacman
  namespace: pacman
spec:
  #type: ClusterIP
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    name: pacman
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pacman
  annotations:
    cert-manager.io/cluster-issuer: "zerossl"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: "contour"
  namespace: pacman
spec:
  tls:
  - hosts:
    - pacman.${TKG_CLUSTER}.tkg.vmware.work.mbentley.net
    secretName: pacman.${TKG_CLUSTER}.tkg.vmware.work.mbentley.net
  rules:
  - host: pacman.${TKG_CLUSTER}.tkg.vmware.work.mbentley.net
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: pacman
              port:
                number: 80
