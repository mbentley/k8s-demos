apiVersion: v1
kind: Namespace
metadata:
  name: pacman
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-storage
  namespace: pacman
spec:
#  storageClassName: "hostpath"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mongo
  name: mongo
  namespace: pacman
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongo
  template:
    metadata:
      labels:
        name: mongo
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - image: mongo:latest
          name: mongo
          ports:
            - name: mongo
              containerPort: 27017
          volumeMounts:
            - name: mongo-db
              mountPath: /data/db
      volumes:
        - name: mongo-db
          persistentVolumeClaim:
            claimName: mongo-storage
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
  namespace: pacman
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: pacman
  name: pacman
  namespace: pacman
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pacman
  template:
    metadata:
      labels:
        name: pacman
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - image: mbentley/pacman-nodejs
          name: pacman
          ports:
            - containerPort: 8080
              name: http-server
---
apiVersion: v1
kind: Service
metadata:
  name: pacman
  labels:
    name: pacman
  namespace: pacman
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    name: pacman
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pacman
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
  namespace: pacman
spec:
  rules:
  - host: pacman.home-wl1.tkg.vmware.work.mbentley.net
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: pacman
              port:
                number: 80
  - host: pacman.home-wl2.tkg.vmware.work.mbentley.net
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: pacman
              port:
                number: 80
